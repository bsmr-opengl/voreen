####################################################
# Configuration file for Voreen.
# Rename this file to 'config.txt' and edit.
####################################################

######################
# Module configuration
######################
# See src/modules for a list of all available modules.

# We definitely need this.
VRN_MODULES += base

# We add default Voreen modules here, i.e., those which do not depend on
# non-standard external libraries (see src/modules/default.pri).
VRN_MODULES += default

# DICOM volume reader and writer, requires the DCMTK library.
#VRN_MODULES += dicom 

# Python bindings, allowing scripts to access Voreen API.
#VRN_MODULES += python

# Volume reader for multi-image TIFF files, requires the libtiff library.
#VRN_MODULES += tiff

# GPU-based isosurface extraction and rendering, requires the HPMC library.
#VRN_MODULES += hpmc 

# OpenCL wrapper and OpenCL-based processors.
#VRN_MODULES += opencl

# Disables generation of module registration header 'include/voreen/modules/gen_moduleregistration.h'
# and uses static 'include/voreen/modules/moduleregistration.h' instead.
# The registration header is included by the VoreenApplication for autoloading of modules.
#DEFINES += VRN_NO_REGISTRATION_HEADER_GENERATION


####################
# External libraries
####################
# You may adjust the paths in the section "Paths" at the bottom of this file.

# Do we have the devil library for image processing?
DEFINES += VRN_WITH_DEVIL

# Do we have the ffmpeg library for video output?
#DEFINES += VRN_WITH_FFMPEG

# Do we support fonts via the freetype/ftgl libraries?
#DEFINES += VRN_WITH_FONTRENDERING

# Do we use the zlib library?
DEFINES += VRN_WITH_ZLIB


###################
# Projects to build
###################
# Only for unix, not considered by qmake-default.bat on Windows.
VRN_PROJECTS = core qt voreenve

# Also build the voltool application?
#VRN_PROJECTS += voltool


#####################
# Additional settings
#####################

# Enable compiler warnings
CONFIG += warn_on

# Disable this line in case of problems with PCH
DEFINES += VRN_PRECOMPILE_HEADER

# Activate additional debug code in Voreen (also sets TGT_DEBUG and activates assertions)
DEFINES += VRN_DEBUG

# Write log output into a HTML file
DEFINES += VRN_ADD_FILE_LOGGER

# Compile Voreen for deployment (adjusts resource paths)
#DEFINES += VRN_DEPLOYMENT

# Extract SVN revision from working copy into svnversion.h
#DEFINES += VRN_WITH_SVNVERSION

# Show splash screen
DEFINES += VRN_SPLASHSCREEN

# Do not use stylesheet in VoreenVE
#DEFINES += VRN_NO_STYLESHEET

# Add additional include paths
INCLUDEPATH +=

# Add additional library search paths
LIBDIR +=

# To build a shared library (DLL) instead of a static one uncomment the
# following two lines.
#CONFIG -= staticlib
#CONFIG += dll

# Disable optimization (useful for debugging)
#QMAKE_CXXFLAGS_RELEASE -= -O2
#QMAKE_CXXFLAGS_RELEASE += -O0

# Make all warnings into errors
#QMAKE_CXXFLAGS += -Werror


############################
# Platform-specific settings
############################
unix {
  CONFIG -= release
  CONFIG += debug

  # For installation with 'make install' specify the installation prefix
  # here. When this is set, the applications cannot be started from the
  # build directory, they need to be installed first.
#  INSTALL_PREFIX = /usr/local

  # Disable usage of libwrap, sometimes needed with DCMTK
  #CONFIG += without_libwrap
}

unix: !macx {
  # Building shared library is the default on Linux
  CONFIG -= staticlib
  CONFIG += dll
}

# Use Windows Management Instrumentation (WMI) for hardware detection
# on Windows? (Not supported for MinGW)
win32: !win32-g++: DEFINES += TGT_WITH_WMI


###############
# Default paths
###############

# Path to Voreen home, detected automatically
VRN_HOME = $$PWD

win32 {
  DEVIL_DIR    = $${VRN_HOME}/ext/il
  FFMPEG_DIR   = $${VRN_HOME}/ext/ffmpeg
  FREETYPE_DIR = $${VRN_HOME}/ext/freetype
  FTGL_DIR     = $${VRN_HOME}/ext/ftgl
  PYTHON_DIR   = $${VRN_HOME}/ext/python
  ZLIB_DIR     = $${VRN_HOME}/ext/zlib
}

unix {
  FREETYPE_DIR = /usr/include/freetype2
  PYTHON_DIR = /usr/include/python
  PYTHON_LIBS = -lpython2.6
}

macx {
  PYTHON_DIR = /usr/include/python2.5
  GLEW_DIR = 
  GLEW_LIBS = 
}

### Local Variables:
### mode:conf-unix
### End:
